import type { Plugin } from 'vite';
import type { types as t, NodePath } from '@babel/core';
declare function viteReactJsx(): Plugin;
declare namespace viteReactJsx {
    var getRuntimeLoader: (opts: {
        root: string;
    }) => {
        name: string;
        enforce: string;
        resolveId(id: string): "react/jsx-runtime" | null;
        load(id: string): string | undefined;
    };
    var restoreJSX: (babel: typeof import("@babel/core"), code: string) => Promise<RestoredJSX>;
}
export default viteReactJsx;
declare type RestoredJSX = [result: t.File | null | undefined, isCommonJS: boolean];
/**
 * Replace this:
 *
 *     import { jsx as _jsx } from "react/jsx-runtime"
 *
 * with this:
 *
 *     var _jsx = require("react/jsx-runtime").jsx
 */
export declare function babelImportToRequire({ types: t, }: typeof import('@babel/core')): {
    visitor: {
        ImportDeclaration(path: NodePath): void;
    };
};
